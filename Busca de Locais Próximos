<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Busca de Locais Próximos</title>
    <!-- CSS do Material UI -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@mui/material@5.8.7/dist/material.min.css" />
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f5f5f5;
        }
        /* Estilo do Container */
        .container {
            max-width: 600px;
            margin: 30px auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }
        /* Estilo do Mapa */
        #map {
            height: 400px;
            width: 100%;
            border-radius: 8px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 style="text-align: center; color: #3f51b5;">Busca de Locais Próximos</h1>
        <input id="place-input" type="text" placeholder="Digite o que procura (ex: farmácia)" style="width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 4px; margin-bottom: 10px;" />
        <button id="search-button" style="padding: 10px; width: 100%; background-color: #3f51b5; color: white; border: none; border-radius: 4px; cursor: pointer;">Buscar</button>
        <div id="map"></div>
    </div>

    <!-- Google Maps API com Places Library -->
    <script src="https://maps.googleapis.com/maps/api/js?key=CHAVE_API&libraries=places&callback=initMap" async defer></script>
    <script>
        let map;
        let service;
        let userLocation;
        let markers = []; // Array para armazenar os marcadores

        function initMap() {
            // Tenta obter a localização do usuário
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    };

                    // Inicializando o mapa centrado na localização do usuário
                    map = new google.maps.Map(document.getElementById("map"), {
                        center: userLocation,
                        zoom: 15,
                    });

                    // Adicionando um marcador para a localização do usuário
                    new google.maps.Marker({
                        position: userLocation,
                        map: map,
                        title: "Você está aqui",
                        icon: {
                            url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png", // Ícone para a localização do usuário
                            scaledSize: new google.maps.Size(40, 40) // Ajusta o tamanho do ícone
                        }
                    });

                    // Inicializando o serviço de busca de lugares
                    service = new google.maps.places.PlacesService(map);
                }, () => {
                    handleLocationError(true);
                });
            } else {
                // Geolocalização não é suportada
                handleLocationError(false);
            }
        }

        function handleLocationError(browserHasGeolocation) {
            alert(browserHasGeolocation ?
                "Erro: O serviço de geolocalização falhou." :
                "Erro: Seu navegador não suporta geolocalização.");
            // Centraliza o mapa em São Paulo como fallback
            userLocation = { lat: -23.55052, lng: -46.6333 };
            initMap();
        }

        // Função para limpar marcadores anteriores
        function clearMarkers() {
            markers.forEach(marker => {
                marker.setMap(null); // Remove o marcador do mapa
            });
            markers = []; // Limpa o array de marcadores
        }

        // Função para buscar locais com base no input do usuário
        function searchPlaces() {
            const input = document.getElementById("place-input").value;

            // Busca de locais no raio de 1500 metros
            service.nearbySearch(
                {
                    location: userLocation, // Usando a localização do usuário
                    radius: 1500,
                    keyword: input, // Usando o input do usuário como palavra-chave
                },
                (results, status) => {
                    if (status === google.maps.places.PlacesServiceStatus.OK && results) {
                        clearMarkers(); // Limpa marcadores anteriores antes de adicionar novos

                        results.forEach((place) => {
                            const marker = new google.maps.Marker({
                                position: place.geometry.location,
                                map: map,
                                title: place.name,
                                // Usando ícone padrão do Google Maps para os locais encontrados
                                icon: {
                                    url: "https://maps.google.com/mapfiles/ms/icons/red-dot.png", // Ícone para os locais encontrados
                                    scaledSize: new google.maps.Size(30, 30) // Ajusta o tamanho do ícone
                                }
                            });

                            // Adiciona o marcador ao array
                            markers.push(marker);

                            // Exibindo informações do local ao clicar no marcador
                            google.maps.event.addListener(marker, "click", () => {
                                alert(
                                    Nome: ${place.name}\n +
                                    Endereço: ${place.vicinity}\n +
                                    Avaliação: ${place.rating}
                                );
                            });
                        });
                    }
                }
            );
        }

        // Adiciona o evento de clique no botão de busca
        document.getElementById("search-button").addEventListener("click", searchPlaces);
    </script>
</body>
</html>
